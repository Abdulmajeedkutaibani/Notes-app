{"version":3,"sources":["Components/NoteCard.js","firebase.js","pages/Notes.js","pages/Create.js","Components/Layout.js","App.js","index.js"],"names":["NoteCard","note","handleDelete","currentUserId","Card","elevation","sx","category","border","CardHeader","avatar","Avatar","background","fontWeight","toUpperCase","action","userId","IconButton","onClick","id","DeleteOutlined","title","subheader","CardContent","Typography","variant","color","details","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getFirestore","getStorage","Notes","auth","getAuth","useState","userUID","setUserUID","addNoteDisplay","setaddNoteDisplay","notes","setNotes","useEffect","onAuthStateChanged","user","currentUser","uid","onSnapshot","collection","db","snapshot","docs","map","doc","data","console","log","email","a","docRef","deleteDoc","newNotes","filter","Container","breakpointCols","default","1100","700","className","columnClassName","Button","display","flexDirection","width","xs","to","style","textDecoration","fontSize","textAlign","Create","history","useHistory","setTitle","setDetails","titleError","setTitleError","detailsError","setDetailsError","setCategory","handleSubmit","e","preventDefault","collectionRef","payload","addDoc","push","fullWidth","sm","marginBottom","component","gutterBottom","textTransform","noValidate","autoComplete","onSubmit","TextField","onChange","target","value","label","required","error","marginTop","multiline","rows","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","type","endIcon","menuItems","Text","Icon","SubjectOutlined","path","AddCircleOutlined","position","top","left","transform","maxWidth","minWidth","bgcolor","borderRadius","boxShadow","p","style2","schema","yup","shape","loginEmail","loginPassword","min","max","schema2","signupName","signupEmail","signupPassword","bio","Layout","children","storage","openLogin","setOpenLogin","openSignUP","setOpenSignUP","openAccount","setOpenAccount","openDeleteAccount","setOpenDeleteAccount","signUpName","setSignUpName","signUpBio","setSignUpBio","guestLinks","setGuestLinks","userLinks","setUserLinks","accountInfo","setAccountInfo","profilePhoto","setProfilePhoto","imageUrl","setImageUrl","loginErrorMessage","setLoginErrorMessage","signupErrorMessage","setSignupErrorMessage","loginMessageDisplay","setLoginMessageDisplay","notesRendering","setNotesRendering","useForm","resolver","yupResolver","register","errors","formState","reset","register2","handleSubmit2","errors2","reset2","name","getDownloadURL","ref","then","url","catch","err","message","imagesRef","uploadBytes","uploadImage","theme","useTheme","classes","page","padding","spacing","location","useLocation","AppBar","Toolbar","flexGrow","format","Date","marginRight","paddingRight","signOut","marginLeft","src","Modal","open","onClose","aria-labelledby","aria-describedby","Box","signInData","password","signInWithEmailAndPassword","userCredential","helperText","InputProps","startAdornment","InputAdornment","AccountCircle","VpnKey","createUserWithEmailAndPassword","setDoc","AlternateEmail","Grid","container","item","mx","height","htmlFor","Input","accept","multiple","files","deleteUser","Drawer","anchor","List","ListItem","button","pathname","ListItemIcon","ListItemText","primary","mixins","toolbar","createTheme","typography","fontFamily","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","palette","secondary","purple","App","ThemeProvider","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb9d66cc.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  CardHeader,\n  CardContent,\n  Typography,\n  IconButton,\n  Card,\n  Avatar,\n} from '@mui/material';\nimport { DeleteOutlined } from '@mui/icons-material';\n\nconst NoteCard = ({ note, handleDelete, currentUserId }) => {\n  return (\n    <div>\n      <Card\n        elevation={1}\n        sx={\n          note.category == 'work'\n            ? { border: '1px solid red' }\n            : note.category == 'reminders'\n            ? { border: '1px solid blue' }\n            : note.category == 'todos'\n            ? { border: '1px solid pink' }\n            : note.category == 'money'\n            ? { border: '1px solid green' }\n            : null\n        }\n      >\n        <CardHeader\n          avatar={\n            <Avatar\n              sx={\n                note.category == 'work'\n                  ? { background: 'red', fontWeight: 'bold' }\n                  : note.category == 'reminders'\n                  ? { background: ' blue', fontWeight: 'bold' }\n                  : note.category == 'todos'\n                  ? { background: 'purple', fontWeight: 'bold' }\n                  : note.category == 'money'\n                  ? { background: ' green', fontWeight: 'bold' }\n                  : null\n              }\n            >\n              {note.category[0].toUpperCase()}\n            </Avatar>\n          }\n          action={\n            note.userId === currentUserId ? (\n              <IconButton onClick={() => handleDelete(note.id)}>\n                <DeleteOutlined />\n              </IconButton>\n            ) : null\n          }\n          title={note.title}\n          subheader={note.category}\n        />\n        <CardContent>\n          <Typography variant='body2' color='textSecondary'>\n            {note.details}\n          </Typography>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default NoteCard;\n","// Import the functions you need from the SDKs you need\nimport { initializeApp } from 'firebase/app';\nimport { getFirestore } from 'firebase/firestore';\nimport { getStorage } from 'firebase/storage';\n\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: 'AIzaSyDpu5PphZxKAEPL8lWGtkp5g2IbouWQnMk',\n  authDomain: 'ak-notes-73043.firebaseapp.com',\n  projectId: 'ak-notes-73043',\n  storageBucket: 'ak-notes-73043.appspot.com',\n  messagingSenderId: '174867080553',\n  appId: '1:174867080553:web:45ffc2d0c765496d9009f8',\n  measurementId: 'G-ZLP43TH6F8',\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst storage = getStorage(app);\n\nexport default getFirestore();\n","import React, { useEffect, useState } from 'react';\nimport { Button, Container, Typography } from '@mui/material';\nimport NoteCard from '../Components/NoteCard';\nimport Masonry from 'react-masonry-css';\nimport db from '../firebase';\nimport { collection, onSnapshot, doc, deleteDoc } from '@firebase/firestore';\nimport { getAuth, onAuthStateChanged } from '@firebase/auth';\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\nimport { Link } from 'react-router-dom';\n\nexport default function Notes() {\n  const auth = getAuth();\n  const [userUID, setUserUID] = useState(null);\n  const [addNoteDisplay, setaddNoteDisplay] = useState('none');\n  const [notes, setNotes] = useState([]);\n  const getUserNotes = () => {\n    onAuthStateChanged(auth, (user) => {\n      if (user) {\n        setUserUID(auth.currentUser.uid);\n\n        onSnapshot(collection(db, 'notes'), (snapshot) => {\n          setNotes(snapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\n        });\n        console.log(user.email + ' logged in');\n        setaddNoteDisplay('flex');\n        // ...\n      } else {\n        setaddNoteDisplay('none');\n        setNotes([]);\n        console.log('User logged out');\n        setUserUID(null);\n      }\n    });\n  };\n  useEffect(() => {\n    getUserNotes();\n  }, []);\n\n  const handleDelete = async (id) => {\n    const docRef = doc(db, 'notes', id);\n    await deleteDoc(docRef);\n    const newNotes = notes.filter((note) => note.id != id);\n    setNotes(newNotes);\n  };\n\n  const breakpoints = {\n    default: 3,\n    1100: 2,\n    700: 1,\n  };\n  return (\n    <Container>\n      <Masonry\n        breakpointCols={breakpoints}\n        className='my-masonry-grid'\n        columnClassName='my-masonry-grid_column'\n      >\n        {userUID\n          ? notes\n              .filter((note) => note.userId === userUID)\n              .map((note) => (\n                <div key={userUID}>\n                  <NoteCard\n                    note={note}\n                    handleDelete={handleDelete}\n                    currentUserId={userUID}\n                  />\n                </div>\n              ))\n          : null}\n\n        <Button\n          color='inherit'\n          sx={{\n            display: addNoteDisplay,\n            flexDirection: 'column',\n            width: { xs: '100%' },\n          }}\n        >\n          <Link\n            to='/create'\n            style={{ textDecoration: 'none', color: '#2196f3' }}\n          >\n            <AddCircleOutlineIcon sx={{ fontSize: 90 }} />\n            <Typography\n              variant='h5'\n              fontWeight='bold'\n              sx={{ textAlign: 'center' }}\n            >\n              Create A New Note\n            </Typography>\n          </Link>\n        </Button>\n      </Masonry>\n    </Container>\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  Button,\n  Container,\n  TextField,\n  Typography,\n  Radio,\n  RadioGroup,\n  FormControlLabel,\n  FormControl,\n  FormLabel,\n} from '@mui/material';\nimport KeyboardArrowRightIcon from '@mui/icons-material/KeyboardArrowRight';\nimport { useHistory } from 'react-router';\nimport db from '../firebase';\nimport { collection, addDoc } from '@firebase/firestore';\nimport { getAuth, onAuthStateChanged } from '@firebase/auth';\n\nexport default function Create() {\n  const history = useHistory();\n  const [title, setTitle] = useState('');\n  const [details, setDetails] = useState('');\n  const [titleError, setTitleError] = useState(false);\n  const [detailsError, setDetailsError] = useState(false);\n  const [category, setCategory] = useState('reminders');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setDetailsError(false);\n    setTitleError(false);\n    const auth = getAuth();\n\n    if (title && details) {\n      const userId = auth.currentUser.uid;\n      const collectionRef = collection(db, 'notes');\n      const payload = {\n        title,\n        category,\n        details,\n        userId,\n      };\n      await addDoc(collectionRef, payload);\n      history.push('/');\n    }\n    if (!title) {\n      setTitleError(true);\n    }\n    if (!details) {\n      setDetailsError(true);\n    }\n  };\n  return (\n    <Container>\n      <Button\n        onClick={() => {\n          history.push('/');\n        }}\n        variant='contained'\n        fullWidth\n        sx={{\n          display: { xs: 'block', sm: 'none' },\n          background: 'gold',\n          color: 'black',\n          marginBottom: 2,\n        }}\n      >\n        Back To Notes\n      </Button>\n      <Typography\n        color='textSecondary'\n        variant='h6'\n        component='h2'\n        gutterBottom\n        sx={{\n          textDecoration: 'underline',\n          textTransform: 'capitalize',\n        }}\n      >\n        create a new note\n      </Typography>\n      <form noValidate autoComplete='off' onSubmit={handleSubmit}>\n        <TextField\n          onChange={(e) => setTitle(e.target.value)}\n          label='Note Title'\n          variant='outlined'\n          color='secondary'\n          fullWidth\n          required\n          error={titleError}\n          sx={{\n            marginTop: '20px',\n            marginBottom: '20px',\n            display: 'block',\n          }}\n        />\n        <TextField\n          onChange={(e) => setDetails(e.target.value)}\n          label='Details'\n          variant='outlined'\n          color='secondary'\n          multiline\n          rows={4}\n          fullWidth\n          required\n          error={detailsError}\n          sx={{\n            marginTop: '20px',\n            marginBottom: '20px',\n            display: 'block',\n          }}\n        />\n        <FormControl\n          sx={{\n            marginTop: '20px',\n            marginBottom: '20px',\n            display: 'block',\n          }}\n        >\n          <FormLabel>Note Category</FormLabel>\n          <RadioGroup\n            value={category}\n            onChange={(e) => {\n              setCategory(e.target.value);\n            }}\n          >\n            <FormControlLabel\n              value='money'\n              control={<Radio color='secondary' />}\n              label='money'\n            />\n            <FormControlLabel\n              value='todos'\n              control={<Radio color='secondary' />}\n              label='Todos'\n            />\n            <FormControlLabel\n              value='reminders'\n              control={<Radio color='secondary' />}\n              label='Reminders'\n            />\n            <FormControlLabel\n              value='work'\n              control={<Radio color='secondary' />}\n              label='Work'\n            />\n          </RadioGroup>\n        </FormControl>\n        <Button\n          type='submit'\n          color='secondary'\n          variant='contained'\n          endIcon={<KeyboardArrowRightIcon />}\n        >\n          Submit\n        </Button>\n      </form>\n    </Container>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n  Typography,\n  Drawer,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  AppBar,\n  Toolbar,\n  useTheme,\n  Avatar,\n  Button,\n  Modal,\n  TextField,\n  Input,\n  InputAdornment,\n  Grid,\n  Box,\n} from '@mui/material';\n\nimport {\n  AccountCircle,\n  AddCircleOutlined,\n  AlternateEmail,\n  SubjectOutlined,\n  VpnKey,\n} from '@mui/icons-material';\nimport { useHistory, useLocation } from 'react-router';\nimport { format } from 'date-fns';\nimport {\n  getAuth,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  onAuthStateChanged,\n  deleteUser,\n} from 'firebase/auth';\nimport db from '../firebase';\nimport { onSnapshot, doc, setDoc } from '@firebase/firestore';\nimport { getStorage, ref, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\n\nconst drawerWidth = 240;\n\nconst menuItems = [\n  {\n    Text: 'Notes',\n    Icon: <SubjectOutlined color='secondary' />,\n    path: '/',\n  },\n  {\n    Text: 'Create Note',\n    Icon: <AddCircleOutlined color='secondary' />,\n    path: '/create',\n  },\n];\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  maxWidth: 400,\n  width: '50%',\n  minWidth: 100,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  borderRadius: '8px',\n  boxShadow: 24,\n  p: 4,\n};\nconst style2 = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  maxWidth: 600,\n  width: '50%',\n  minWidth: 100,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  borderRadius: '8px',\n  boxShadow: 24,\n  p: 2,\n};\n\nconst schema = yup.object().shape({\n  loginEmail: yup.string().email().required(),\n  loginPassword: yup.string().min(7).max(15).required(),\n});\nconst schema2 = yup.object().shape({\n  signupName: yup.string().required(),\n  signupEmail: yup.string().email().required(),\n  signupPassword: yup.string().min(7).max(15).required(),\n  bio: yup.string().required(),\n});\n\nconst Layout = ({ children }) => {\n  const auth = getAuth();\n  const storage = getStorage();\n  const [openLogin, setOpenLogin] = useState(false);\n  const handleLoginOpen = () => setOpenLogin(true);\n  const handleLoginClose = () => setOpenLogin(false);\n  const [openSignUP, setOpenSignUP] = useState(false);\n  const [openAccount, setOpenAccount] = useState(false);\n  const [openDeleteAccount, setOpenDeleteAccount] = useState(false);\n  const handleSignUpOpen = () => setOpenSignUP(true);\n  const handleSignUpClose = () => setOpenSignUP(false);\n  const handleAccountOpen = () => setOpenAccount(true);\n  const handleAccountClose = () => setOpenAccount(false);\n  const handleDeleteAccountOpen = () => setOpenDeleteAccount(true);\n  const handleDeleteAccountClose = () => setOpenDeleteAccount(false);\n  const [signUpName, setSignUpName] = useState('Not Set');\n  const [signUpBio, setSignUpBio] = useState();\n  const [guestLinks, setGuestLinks] = useState('none');\n  const [userLinks, setUserLinks] = useState('none');\n  const [accountInfo, setAccountInfo] = useState();\n  const [profilePhoto, setProfilePhoto] = useState(null);\n  const [imageUrl, setImageUrl] = useState();\n  const [loginErrorMessage, setLoginErrorMessage] = useState();\n  const [signupErrorMessage, setSignupErrorMessage] = useState();\n  const [loginMessageDisplay, setLoginMessageDisplay] = useState('none');\n  const [notesRendering, setNotesRendering] = useState();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n  const {\n    register: register2,\n    handleSubmit: handleSubmit2,\n    formState: { errors: errors2 },\n    reset: reset2,\n  } = useForm({\n    resolver: yupResolver(schema2),\n  });\n\n  // Get a reference to the storage service, which is used to create references in your storage bucket\n  onAuthStateChanged(auth, (user) => {\n    if (user) {\n      setNotesRendering(children);\n      setLoginMessageDisplay('none');\n      setUserLinks('block');\n      setGuestLinks('none');\n      setAccountInfo(user.email);\n      onSnapshot(doc(db, 'users', auth.currentUser.uid), (doc) => {\n        setSignUpName(doc.data().name);\n        setSignUpBio(doc.data().bio);\n      });\n\n      getDownloadURL(ref(storage, `PhotoCollection/${auth.currentUser.uid}`))\n        .then((url) => {\n          setImageUrl(url);\n        })\n        .catch((err) => {\n          console.log(err.message);\n        });\n    } else {\n      setLoginMessageDisplay('block');\n      setUserLinks('none');\n      setGuestLinks('block');\n      setAccountInfo('');\n      setImageUrl(null);\n    }\n  });\n\n  // Create a storage reference\n  const uploadImage = () => {\n    const auth = getAuth();\n    if (auth.currentUser) {\n      const imagesRef = ref(storage, `PhotoCollection/${auth.currentUser.uid}`);\n      uploadBytes(imagesRef, profilePhoto).then((snapshot) => {\n        console.log('Uploaded a blob or file!');\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (profilePhoto) {\n      uploadImage();\n      setOpenAccount(false);\n      getDownloadURL(ref(storage, `PhotoCollection/${auth.currentUser.uid}`))\n        .then((url) => {\n          setImageUrl(url);\n        })\n        .catch((error) => {\n          console.log(error.message);\n        });\n    } else console.log('no picture uploaded');\n  }, [profilePhoto]);\n\n  const theme = useTheme();\n  const classes = {\n    page: {\n      background: '#f9f9f9',\n      width: '100%',\n      padding: theme.spacing(3),\n    },\n  };\n  const history = useHistory();\n  const location = useLocation();\n\n  const signUpUser = (data) => {\n    const name = data.signupName;\n    const email = data.signupEmail;\n    const password = data.signupPassword;\n    const bio = data.bio;\n    const auth = getAuth();\n\n    createUserWithEmailAndPassword(auth, email, password)\n      .then((userCredential) => {\n        // Signed in\n        const userId = userCredential.user.uid;\n        console.log(userId);\n        setProfilePhoto(userId);\n        setDoc(doc(db, 'users', userId), {\n          name,\n          bio,\n        });\n        onSnapshot(doc(db, 'users', auth.currentUser.uid), (doc) => {\n          setSignUpName(doc.data().name);\n          setSignUpBio(doc.data().bio);\n        });\n        setOpenSignUP(false);\n        setSignupErrorMessage();\n        reset2();\n\n        // ...\n      })\n      .catch((error) => {\n        setSignupErrorMessage(\n          `This user Email is already taken. Try Signing up with another Email.`\n        );\n\n        // ..\n      });\n  };\n\n  const signInUser = (signInData) => {\n    const email = signInData.loginEmail;\n    const password = signInData.loginPassword;\n    signInWithEmailAndPassword(auth, email, password)\n      .then((userCredential) => {\n        // Signed in\n        setLoginErrorMessage();\n        setOpenLogin(false);\n        reset();\n        // ...\n      })\n      .catch((error) => {\n        setLoginErrorMessage(\n          `Login Error. Make sure you entered the Email and Password correctly and that you're Signed Up.`\n        );\n      });\n  };\n  const SignOutUser = () => {\n    setNotesRendering(null);\n    auth.signOut().catch((error) => {\n      console.log(error.message);\n    });\n\n    history.push('/');\n  };\n\n  const handleUserDelete = () => {\n    const auth = getAuth();\n    const user = auth.currentUser;\n\n    deleteUser(user)\n      .then(() => {\n        console.log('User Deleted');\n        history.push('/');\n        setOpenAccount(false);\n      })\n      .catch((error) => {\n        setOpenDeleteAccount(true);\n      });\n  };\n\n  return (\n    <div style={{ display: 'flex' }}>\n      {/* app bar */}\n      <AppBar\n        color='inherit'\n        elevation={0}\n        sx={{\n          width: { sm: `calc(100% - ${drawerWidth}px)`, xs: '100%' },\n        }}\n      >\n        <Toolbar\n          sx={{\n            xs: {\n              display: 'flex',\n              flexDirection: 'column',\n              background: 'teal',\n            },\n            sm: { display: 'block', background: 'white' },\n          }}\n        >\n          <Typography\n            sx={{ flexGrow: 1, display: { xs: 'none', sm: 'block' } }}\n          >\n            Today is the {format(new Date(), 'do MMMM Y')}\n          </Typography>\n          <Typography\n            sx={{ display: { xs: 'block', sm: 'none' }, flexGrow: 1 }}\n          >\n            {format(new Date(), 'do MMMM Y')}\n          </Typography>\n\n          <Button\n            color='inherit'\n            onClick={handleLoginOpen}\n            sx={{ display: guestLinks }}\n          >\n            Login\n          </Button>\n          <Button\n            variant='outlined'\n            color='success'\n            sx={{\n              display: userLinks,\n              xs: { marginRight: 1, paddingRight: 3 },\n              sm: { marginRight: 0, paddingRight: 0 },\n            }}\n            onClick={handleAccountOpen}\n          >\n            Account\n          </Button>\n          <Button\n            color='inherit'\n            onClick={handleSignUpOpen}\n            sx={{ display: guestLinks }}\n          >\n            Sign Up\n          </Button>\n          <Button\n            variant='outlined'\n            color='error'\n            onClick={SignOutUser}\n            sx={{\n              display: userLinks,\n              marginLeft: 1,\n            }}\n          >\n            Logout\n          </Button>\n          <Avatar src={imageUrl} sx={{ marginLeft: theme.spacing(2) }} />\n\n          {/* Login modal */}\n          <Modal\n            open={openLogin}\n            onClose={handleLoginClose}\n            aria-labelledby='modal-modal-title'\n            aria-describedby='modal-modal-description'\n          >\n            <Box\n              key={1}\n              sx={style}\n              component='form'\n              noValidate\n              onSubmit={handleSubmit(signInUser)}\n            >\n              <Typography color='error' sx={{ fontWeight: 'bold' }}>\n                {loginErrorMessage}\n              </Typography>\n              <TextField\n                {...register('loginEmail')}\n                label='Email'\n                variant='outlined'\n                color='secondary'\n                fullWidth\n                required\n                error={errors.loginEmail ? true : false}\n                helperText={\n                  errors.loginEmail ? 'please enter a valid Email' : null\n                }\n                type='email'\n                id='login-email'\n                sx={{\n                  marginTop: '20px',\n                  marginBottom: '20px',\n                  display: 'block',\n                }}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position='start'>\n                      <AccountCircle />\n                    </InputAdornment>\n                  ),\n                }}\n              />\n              <TextField\n                {...register('loginPassword')}\n                label='Password'\n                variant='outlined'\n                color='secondary'\n                fullWidth\n                error={errors.loginPassword ? true : false}\n                helperText={\n                  errors.loginPassword\n                    ? 'Password must contain 8 to 15 characters'\n                    : null\n                }\n                type='password'\n                id='login-password'\n                sx={{\n                  marginTop: '20px',\n                  marginBottom: '20px',\n                  display: 'block',\n                }}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position='start'>\n                      <VpnKey />\n                    </InputAdornment>\n                  ),\n                }}\n              />\n              <Button\n                type='submit'\n                color='primary'\n                variant='contained'\n                sx={{ width: '100%' }}\n              >\n                Login\n              </Button>\n            </Box>\n          </Modal>\n          {/* Sign up modal */}\n          <Modal\n            open={openSignUP}\n            onClose={handleSignUpClose}\n            aria-labelledby='modal-modal-title'\n            aria-describedby='modal-modal-description'\n          >\n            <Box\n              key={2}\n              sx={style}\n              component='form'\n              onSubmit={handleSubmit2(signUpUser)}\n            >\n              <Typography variant='h5' fontWeight='bold'>\n                Sign Up\n              </Typography>\n              <br />\n              <Typography color='error' sx={{ fontWeight: 'bold' }}>\n                {signupErrorMessage}\n              </Typography>\n              <TextField\n                {...register2('signupName')}\n                label='Name'\n                variant='outlined'\n                color='secondary'\n                fullWidth\n                error={errors2.signupName ? true : false}\n                helperText={\n                  errors2.signupName ? `This field can't be empty` : null\n                }\n                id='signUp-name'\n                sx={{\n                  marginTop: '20px',\n                  marginBottom: '20px',\n                  display: 'block',\n                }}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position='start'>\n                      <AccountCircle />\n                    </InputAdornment>\n                  ),\n                }}\n              />\n              <TextField\n                {...register2('signupEmail')}\n                label='Email'\n                variant='outlined'\n                color='secondary'\n                fullWidth\n                required\n                error={errors2.signupEmail ? true : false}\n                helperText={\n                  errors2.signupEmail ? 'please enter a valid Email' : null\n                }\n                type='email'\n                id='signUp-email'\n                sx={{\n                  marginTop: '20px',\n                  marginBottom: '20px',\n                  display: 'block',\n                }}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position='start'>\n                      <AlternateEmail />\n                    </InputAdornment>\n                  ),\n                }}\n              />\n              <TextField\n                {...register2('signupPassword')}\n                label='Password'\n                variant='outlined'\n                color='secondary'\n                fullWidth\n                error={errors2.signupPassword ? true : false}\n                helperText={\n                  errors2.signupPassword\n                    ? 'Password must contain 8 to 15 characters'\n                    : null\n                }\n                type='password'\n                id='signUp-password'\n                sx={{\n                  marginTop: '20px',\n                  marginBottom: '20px',\n                  display: 'block',\n                }}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position='start'>\n                      <VpnKey />\n                    </InputAdornment>\n                  ),\n                }}\n              />\n              <TextField\n                {...register2('bio')}\n                label='bio'\n                variant='outlined'\n                color='secondary'\n                fullWidth\n                error={errors2.bio ? true : false}\n                helperText={errors2.bio ? `This field can't be empty` : null}\n                multiline\n                rows={4}\n                id='signUp-bio'\n                sx={{\n                  marginTop: '20px',\n                  marginBottom: '20px',\n                  display: 'block',\n                }}\n              />\n\n              <Button\n                type='submit'\n                variant='contained'\n                fullWidth\n                color='success'\n              >\n                Sign Up\n              </Button>\n            </Box>\n          </Modal>\n          {/* Account Modal */}\n          <Modal\n            open={openAccount}\n            onClose={handleAccountClose}\n            aria-labelledby='modal-modal-title'\n            aria-describedby='modal-modal-description'\n          >\n            <Box sx={style}>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <Typography id='modal-modal-title' variant='h5'>\n                    Logged in as:\n                    <br />\n                    <Typography variant='h6' color='green' component='span'>\n                      {signUpName}\n                    </Typography>\n                  </Typography>\n                </Grid>\n                <Grid item xs={12} sx={{ mx: 'auto' }}>\n                  <Typography id='modal-modal-title' variant='h5'>\n                    User Email: <br />\n                    <Typography variant='h6' color='teal' component='span'>\n                      {accountInfo}\n                    </Typography>\n                  </Typography>\n                </Grid>\n                <Grid item xs={12}>\n                  <Typography id='modal-modal-title' variant='h5'>\n                    Bio:\n                    <br />\n                    <Typography variant='h6' color='red' component='span'>\n                      {signUpBio}\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12}>\n                  <Avatar\n                    src={imageUrl}\n                    sx={{\n                      mx: 'auto',\n                      width: 130,\n                      height: 130,\n                      border: '1px solid lightblue',\n                    }}\n                  />\n                </Grid>\n                <Grid item sx={{ mx: 'auto' }}>\n                  <label htmlFor='contained-button-file'>\n                    <Input\n                      id='contained-button-file'\n                      accept='image/*'\n                      multiple\n                      type='file'\n                      sx={{ display: 'none' }}\n                      onChange={(e) => setProfilePhoto(e.target.files[0])}\n                    />\n                    <Button variant='contained' component='span'>\n                      Upload A Profile Photo\n                    </Button>\n                  </label>\n                </Grid>\n                <Grid item sx={{ width: '100%' }}>\n                  <Button\n                    fullWidth\n                    variant='contained'\n                    color='error'\n                    onClick={handleUserDelete}\n                  >\n                    Delete Account\n                  </Button>\n                </Grid>\n              </Grid>\n            </Box>\n          </Modal>\n          {/* Delete Account Modal */}\n          <Modal\n            open={openDeleteAccount}\n            onClose={handleDeleteAccountClose}\n            aria-labelledby='modal-modal-title'\n            aria-describedby='modal-modal-description'\n          >\n            <Box sx={style2}>\n              <Typography\n                variant='h5'\n                color='red'\n                component='span'\n                sx={{ fontWeight: 'bold' }}\n              >\n                Invalid command: if you want to delete your account then please\n                do this step immediatly after you login\n              </Typography>\n              <br />\n              <br />\n              <Typography variant='h6' color='blue' component='span'>\n                Instructions: Logout of the current Account{' '}\n                <Typography variant='h6' color='teal' component='span'>\n                  {accountInfo}\n                </Typography>\n                , then Login again using the same Account,Then immediatly open\n                the Account page and then click\n                <Typography variant='h6' color='red' component='span'>\n                  {' '}\n                  DELETE ACCOUNT{' '}\n                </Typography>\n                and your account will be deleted permanently.\n              </Typography>\n            </Box>\n          </Modal>\n          {/* side drawer */}\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        sx={{\n          width: drawerWidth,\n          '& .MuiDrawer-paper': {\n            width: drawerWidth,\n          },\n          display: { xs: 'none', sm: 'block' },\n        }}\n        variant='permanent'\n        anchor='left'\n      >\n        <div>\n          <Typography variant='h5' sx={{ padding: 2 }}>\n            AK Notes\n          </Typography>\n        </div>\n\n        {/* list / links */}\n        <List sx={{ display: userLinks }}>\n          {menuItems.map((item) => (\n            <ListItem\n              key={item.Text}\n              button\n              onClick={() => {\n                history.push(item.path);\n              }}\n              sx={\n                location.pathname == item.path\n                  ? { background: '#f4f4f4' }\n                  : null\n              }\n            >\n              <ListItemIcon>{item.Icon}</ListItemIcon>\n              <ListItemText primary={item.Text} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n      <div style={classes.page}>\n        <div style={theme.mixins.toolbar}></div>\n        {notesRendering}\n        <Typography\n          variant='h4'\n          fontWeight='bold'\n          sx={{ display: loginMessageDisplay }}\n        >\n          Please Log In To Create And View Notes\n        </Typography>\n      </div>\n    </div>\n  );\n};\n\nexport default Layout;\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Notes from './pages/Notes';\nimport Create from './pages/Create';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { purple } from '@mui/material/colors';\nimport Layout from './Components/Layout';\n\nconst theme = createTheme({\n  typography: {\n    fontFamily: 'Quicksand',\n    fontWeightLight: 400,\n    fontWeightRegular: 500,\n    fontWeightMedium: 600,\n    fontWeightBold: 700,\n  },\n\n  palette: {\n    secondary: purple,\n  },\n});\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <Layout>\n          <Switch>\n            <Route exact path='/'>\n              <Notes />\n            </Route>\n            <Route path='/create'>\n              <Create />\n            </Route>\n          </Switch>\n        </Layout>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}